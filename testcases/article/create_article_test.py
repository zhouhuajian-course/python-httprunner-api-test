# NOTE: Generated By HttpRunner v3.1.6
# FROM: har\article\create_article.har


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase
import pytest
import csv
import os


with open(os.path.dirname(__file__) + "/create_article.csv", mode="r", encoding="utf-8") as f:
    reader = csv.DictReader(f)
    data = list(reader)
for elem in data:
    elem['status'] = int(elem['status'])
    elem['code'] = int(elem['code'])
# print(data)
# exit()


class TestCaseCreateArticle(HttpRunner):

    @pytest.mark.parametrize("param", data)
    def test_start(self, param):
        super().test_start(param)

    config = Config("发帖接口测试").verify(False).base_url("${get_base_url()}")

    teststeps = [
        Step(
            RunRequest("/api/create_article")
            .post("/api/create_article")
            .with_headers(
                **{
                    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36",
                }
            )
            .with_cookies(
                **{"session": "${get_session_id()}"}
            )
            .with_data({"title": "$title", "content": "$content"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('body.status', '$status')
            .assert_equal('body.message', '$message')
            .assert_equal('body.code', '$code')
            .assert_type_match('body.data.article_id', '$article_id_type')
            # .assert_greater_or_equals("body.data.article_id", 1)
        ),
    ]


if __name__ == "__main__":
    TestCaseCreateArticle().test_start()
