# NOTE: Generated By HttpRunner v3.1.6
# FROM: har\login\login.har


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase
import pytest


class TestCaseLogin(HttpRunner):

    # @pytest.mark.skip("登录接口暂时废弃")
    @pytest.mark.parametrize("param", [
        # 反例 账号不填 密码正确
        {"user": "", "pwd": "123456", "status": 0, "message": "请输入账号", "code": 1001, "session_type": None},
        # 反例 账号正确 密码错误
        {"user": "zhouhuajian", "pwd": "123", "status": 0, "message": "账号或密码不正确", "code": 1003, "session_type": None},
        # 正例 账号正确 密码正确
        {"user": "zhouhuajian", "pwd": "123456", "status": 1, "message": "登录成功", "code": 0, "session_type": str},
    ])
    def test_start(self, param):
        super().test_start(param)

    config = Config("登录接口测试").verify(False).base_url("${get_base_url()}")

    teststeps = [
        Step(
            RunRequest("/api/login")
            .post("/api/login")
            .with_headers(
                **{
                    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.61 Safari/537.36",
                }
            )
            .with_data({"user": "$user", "pwd": "$pwd"})
            .validate()
            .assert_equal("status_code", 200)
            # .assert_equal('headers."Content-Type"', "application/json")
            .assert_equal('body.status', '$status')
            .assert_equal('body.message', '$message')
            .assert_equal('body.code', '$code')
            # .assert_length_greater_or_equals('cookies.session', 1)
            .assert_type_match('cookies.session', '$session_type')
        ),
    ]


if __name__ == "__main__":
    TestCaseLogin().test_start()
